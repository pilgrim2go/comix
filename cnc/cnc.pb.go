// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cnc.proto

package cnc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Response struct {
	HasUpdate            bool     `protobuf:"varint,1,opt,name=has_update,json=hasUpdate,proto3" json:"has_update,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Checksum             []byte   `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_cnc_1b035227919ec77a, []int{0}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetHasUpdate() bool {
	if m != nil {
		return m.HasUpdate
	}
	return false
}

func (m *Response) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Response) GetChecksum() []byte {
	if m != nil {
		return m.Checksum
	}
	return nil
}

type PingMsg struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	StatusMessage        string   `protobuf:"bytes,2,opt,name=statusMessage,proto3" json:"statusMessage,omitempty"`
	ClientId             string   `protobuf:"bytes,3,opt,name=clientId,proto3" json:"clientId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingMsg) Reset()         { *m = PingMsg{} }
func (m *PingMsg) String() string { return proto.CompactTextString(m) }
func (*PingMsg) ProtoMessage()    {}
func (*PingMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_cnc_1b035227919ec77a, []int{1}
}
func (m *PingMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingMsg.Unmarshal(m, b)
}
func (m *PingMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingMsg.Marshal(b, m, deterministic)
}
func (dst *PingMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingMsg.Merge(dst, src)
}
func (m *PingMsg) XXX_Size() int {
	return xxx_messageInfo_PingMsg.Size(m)
}
func (m *PingMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_PingMsg.DiscardUnknown(m)
}

var xxx_messageInfo_PingMsg proto.InternalMessageInfo

func (m *PingMsg) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *PingMsg) GetStatusMessage() string {
	if m != nil {
		return m.StatusMessage
	}
	return ""
}

func (m *PingMsg) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func init() {
	proto.RegisterType((*Response)(nil), "cnc.Response")
	proto.RegisterType((*PingMsg)(nil), "cnc.PingMsg")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CnCClient is the client API for CnC service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CnCClient interface {
	Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*Response, error)
}

type cnCClient struct {
	cc *grpc.ClientConn
}

func NewCnCClient(cc *grpc.ClientConn) CnCClient {
	return &cnCClient{cc}
}

func (c *cnCClient) Ping(ctx context.Context, in *PingMsg, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/cnc.CnC/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CnCServer is the server API for CnC service.
type CnCServer interface {
	Ping(context.Context, *PingMsg) (*Response, error)
}

func RegisterCnCServer(s *grpc.Server, srv CnCServer) {
	s.RegisterService(&_CnC_serviceDesc, srv)
}

func _CnC_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CnCServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cnc.CnC/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CnCServer).Ping(ctx, req.(*PingMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _CnC_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cnc.CnC",
	HandlerType: (*CnCServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _CnC_Ping_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cnc.proto",
}

func init() { proto.RegisterFile("cnc.proto", fileDescriptor_cnc_1b035227919ec77a) }

var fileDescriptor_cnc_1b035227919ec77a = []byte{
	// 205 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x41, 0x4b, 0x85, 0x40,
	0x14, 0x46, 0x1b, 0x27, 0xca, 0xb9, 0xbc, 0x17, 0x71, 0x57, 0x22, 0x04, 0x22, 0x05, 0x2e, 0xc2,
	0x45, 0xfd, 0x04, 0x57, 0x2d, 0x84, 0x18, 0x88, 0x16, 0x2d, 0x62, 0x1a, 0x07, 0x15, 0x6d, 0x46,
	0xbc, 0x33, 0xff, 0x3f, 0x1c, 0x4c, 0x78, 0xbb, 0x7b, 0xee, 0xe2, 0x7c, 0x1c, 0x10, 0xda, 0xea,
	0x7a, 0x59, 0x9d, 0x77, 0xc8, 0xb5, 0xd5, 0xe5, 0x27, 0xa4, 0xd2, 0xd0, 0xe2, 0x2c, 0x19, 0x7c,
	0x00, 0x18, 0x14, 0x7d, 0x87, 0xa5, 0x53, 0xde, 0x64, 0xac, 0x60, 0x55, 0x2a, 0xc5, 0xa0, 0xe8,
	0x23, 0x3e, 0xf0, 0x1e, 0x78, 0x58, 0xe7, 0x2c, 0x29, 0x58, 0x25, 0xe4, 0x76, 0x62, 0x0e, 0xa9,
	0x1e, 0x8c, 0x9e, 0x28, 0xfc, 0x66, 0xbc, 0x60, 0xd5, 0x49, 0x1e, 0x5c, 0x7e, 0xc1, 0xed, 0xfb,
	0x68, 0xfb, 0x96, 0x7a, 0xbc, 0x83, 0xc4, 0x4d, 0xbb, 0x2f, 0x71, 0x13, 0x3e, 0xc2, 0x99, 0xbc,
	0xf2, 0x81, 0x5a, 0x43, 0xa4, 0x7a, 0xb3, 0x2b, 0x2f, 0x9f, 0x51, 0x3e, 0x8f, 0xc6, 0xfa, 0xb7,
	0x2e, 0xca, 0x85, 0x3c, 0xf8, 0xe5, 0x19, 0x78, 0x63, 0x1b, 0x7c, 0x82, 0xeb, 0x6d, 0x03, 0x4f,
	0xf5, 0x56, 0xb5, 0xcf, 0xe5, 0xe7, 0x48, 0xff, 0x55, 0xe5, 0xd5, 0xcf, 0x4d, 0xec, 0x7d, 0xfd,
	0x0b, 0x00, 0x00, 0xff, 0xff, 0xf9, 0xcc, 0x96, 0x06, 0xfc, 0x00, 0x00, 0x00,
}
